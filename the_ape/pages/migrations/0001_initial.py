# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-02-22 19:00
from __future__ import unicode_literals

import audiofield.fields
from django.db import migrations, models
import django.db.models.deletion
import pages.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ImageCarouselItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField()),
                ('start_date', models.DateTimeField(blank=True, help_text='Time at which this item will turn on', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='Time at which this item will turn off', null=True)),
                ('link_id', models.PositiveIntegerField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('link_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, choices=[('home', 'Home'), ('classes', 'Classes'), ('shows', 'Shows'), ('faculty', 'Faculty'), ('performers', 'Performers'), ('media', 'Media')], null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('draft', models.BooleanField(default=False)),
                ('background_gradient', models.NullBooleanField()),
                ('background_start_color', pages.fields.ColorField(blank=True, max_length=10, null=True)),
                ('background_end_color', pages.fields.ColorField(blank=True, help_text='Also used as fade color for background image if specified (default is dominant image color)', max_length=10, null=True)),
                ('text_color', pages.fields.ColorField(blank=True, max_length=10, null=True)),
                ('button_color', pages.fields.ColorField(blank=True, max_length=10, null=True)),
                ('button_text_color', pages.fields.ColorField(blank=True, max_length=10, null=True)),
                ('nav_bar_color', pages.fields.ColorField(blank=True, help_text='This will also set the color of widget headers', max_length=10, null=True)),
                ('nav_bar_text_color', pages.fields.ColorField(blank=True, max_length=10, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PageToWidget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(default=0)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_to_widgets', to='pages.Page')),
            ],
            options={
                'ordering': ['page', 'sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateTimeField(blank=True, help_text='Time at which this widget will turn on', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='Time at which this widget will turn off', null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ApeClassesWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
                ('display_type', models.CharField(blank=True, choices=[('gallery', 'Cover Gallery'), ('row_focus', 'Row')], default='gallery', max_length=100, null=True)),
                ('class_type', models.CharField(blank=True, choices=[('IMPROV', 'Improv'), ('SKETCH', 'Sketch'), ('ACTING', 'Acting')], default='gallery', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'group of ape classes',
                'verbose_name_plural': 'groups of ape classes',
            },
            bases=('pages.widget',),
        ),
        migrations.CreateModel(
            name='ApeClassFocusWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
            ],
            options={
                'abstract': False,
            },
            bases=('pages.widget',),
        ),
        migrations.CreateModel(
            name='AudioWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
                ('audio_file', audiofield.fields.AudioField(blank=True, help_text='Allowed type - .mp3, .wav, .ogg', upload_to='audio')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('pages.widget',),
        ),
        migrations.CreateModel(
            name='BannerWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
                ('link_id', models.PositiveIntegerField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='images/banner/')),
            ],
            options={
                'verbose_name': 'banner',
                'verbose_name_plural': 'banners',
                'abstract': False,
            },
            bases=('pages.widget', models.Model),
        ),
        migrations.CreateModel(
            name='EventFocusWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
            ],
            options={
                'abstract': False,
            },
            bases=('pages.widget',),
        ),
        migrations.CreateModel(
            name='EventsWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
                ('display_type', models.CharField(blank=True, choices=[('gallery', 'Cover Gallery'), ('row_focus', 'Row')], default='gallery', max_length=100, null=True)),
                ('upcoming_events', models.BooleanField(default=False)),
                ('upcoming_events_window', models.IntegerField(blank=True, help_text='Number of days in future for which events will display.', null=True)),
            ],
            options={
                'verbose_name': 'group of events',
                'verbose_name_plural': 'groups of events',
            },
            bases=('pages.widget',),
        ),
        migrations.CreateModel(
            name='ImageCarouselWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
            ],
            options={
                'verbose_name': 'carousel of big images',
                'verbose_name_plural': 'carousels of big images',
            },
            bases=('pages.widget',),
        ),
        migrations.CreateModel(
            name='PeopleWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
                ('display_type', models.CharField(blank=True, choices=[('gallery', 'Cover Gallery'), ('row_focus', 'Row')], default='gallery', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'group of people',
                'verbose_name_plural': 'groups of people',
            },
            bases=('pages.widget',),
        ),
        migrations.CreateModel(
            name='PersonFocusWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
            ],
            options={
                'abstract': False,
            },
            bases=('pages.widget',),
        ),
        migrations.CreateModel(
            name='TextWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
                ('content', models.TextField()),
                ('text_color', pages.fields.ColorField(blank=True, max_length=10)),
            ],
            options={
                'verbose_name': 'block of text',
                'verbose_name_plural': 'blocks of text',
            },
            bases=('pages.widget',),
        ),
        migrations.CreateModel(
            name='VideoWidget',
            fields=[
                ('widget_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Widget')),
                ('video_file', models.FileField(help_text='Allowed type - .mp4, .ogg', upload_to='videos')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('pages.widget',),
        ),
        migrations.AddField(
            model_name='pagetowidget',
            name='widget',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_to_widgets', to='pages.Widget'),
        ),
        migrations.AddField(
            model_name='page',
            name='widgets_base',
            field=pages.fields.SortedManyToManyField(related_name='pages', through='pages.PageToWidget', to='pages.Widget'),
        ),
    ]
